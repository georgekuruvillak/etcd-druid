
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: etcds.druid.gardener.cloud
spec:
  group: druid.gardener.cloud
  names:
    kind: Etcd
    listKind: EtcdList
    plural: etcds
    singular: etcd
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.labelSelector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      description: Etcd is the Schema for the etcds API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EtcdSpec defines the desired state of Etcd
          properties:
            annotations:
              additionalProperties:
                type: string
              type: object
            backup:
              description: BackupSpec defines parametes associated with the full and
                delta snapshots of etcd
              properties:
                deltaSnapshotMemoryLimit:
                  description: DeltaSnapshotMemoryLimit defines the memory limit after
                    which delta snapshots will be taken
                  type: string
                deltaSnapshotPeriod:
                  description: DeltaSnapshotPeriod defines the period after which
                    delta snapshots will be taken
                  type: string
                fullSnapshotSchedule:
                  description: FullSnapshotSchedule defines the cron standard schedule
                    for full snapshots.
                  type: string
                garbageCollectionPeriod:
                  description: GarbageCollectionPeriod defines the period for garbage
                    collecting old backups
                  type: string
                garbageCollectionPolicy:
                  description: GarbageCollectionPolicy defines the policy for garbage
                    collecting old backups
                  enum:
                  - Exponential
                  - LimitBased
                  type: string
                image:
                  description: Image defines the etcd container image and tag
                  type: string
                port:
                  description: Port define the port on which etcd-backup-restore server
                    will exposed.
                  type: integer
                resources:
                  description: 'Resources defines the compute Resources required by
                    backup-restore container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                store:
                  description: Store defines the specification of object store provider
                    for storing backups.
                  properties:
                    container:
                      type: string
                    prefix:
                      type: string
                    provider:
                      description: StorageProvider defines the type of object store
                        provider for storing backups.
                      enum:
                      - aws
                      - gcp
                      - os
                      - azure
                      - alicloud
                      type: string
                    secretRef:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                  required:
                  - container
                  - prefix
                  - provider
                  - secretRef
                  type: object
                tls:
                  description: TLSConfig hold the TLS configuration details.
                  properties:
                    clientTLSSecretRef:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    serverTLSSecretRef:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    tlsCASecretRef:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                  required:
                  - clientTLSSecretRef
                  - serverTLSSecretRef
                  - tlsCASecretRef
                  type: object
              required:
              - image
              type: object
            etcd:
              description: EtcdConfig defines parametes associated etcd deployed
              properties:
                authSecretRef:
                  description: SecretReference represents a Secret Reference. It has
                    enough information to retrieve secret in any namespace
                  properties:
                    name:
                      description: Name is unique within a namespace to reference
                        a secret resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the secret
                        name must be unique.
                      type: string
                  type: object
                clientPort:
                  type: integer
                defragmentationSchedule:
                  description: DefragmentationSchedule defines the cron standard schedule
                    for defragmentation of etcd.
                  type: string
                image:
                  description: Image defines the etcd container image and tag
                  type: string
                metrics:
                  description: Metrics defines the level of detail for exported metrics
                    of etcd, specify 'extensive' to include histogram metrics.
                  enum:
                  - basic
                  - extensive
                  type: string
                quota:
                  description: Quota defines the etcd DB quota.
                  type: string
                resources:
                  description: 'Resources defines the compute Resources required by
                    etcd container. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                  properties:
                    limits:
                      additionalProperties:
                        type: string
                      description: 'Limits describes the maximum amount of compute
                        resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                    requests:
                      additionalProperties:
                        type: string
                      description: 'Requests describes the minimum amount of compute
                        resources required. If Requests is omitted for a container,
                        it defaults to Limits if that is explicitly specified, otherwise
                        to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                      type: object
                  type: object
                serverPort:
                  type: integer
                tls:
                  description: TLSConfig hold the TLS configuration details.
                  properties:
                    clientTLSSecretRef:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    serverTLSSecretRef:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                    tlsCASecretRef:
                      description: SecretReference represents a Secret Reference.
                        It has enough information to retrieve secret in any namespace
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                  required:
                  - clientTLSSecretRef
                  - serverTLSSecretRef
                  - tlsCASecretRef
                  type: object
              required:
              - image
              type: object
            labels:
              additionalProperties:
                type: string
              type: object
            replicas:
              type: integer
            selector:
              description: 'selector is a label query over pods that should match
                the replica count. It must match the pod template''s labels. More
                info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors'
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            storageCapacity:
              description: StorageCapacity defines the size of persistent volume.
              type: string
            storageClass:
              description: 'StorageClass defines the name of the StorageClass required
                by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
              type: string
            volumeClaimTemplate:
              description: VolumeClaimTemplate defines the volume claim template to
                be created
              type: string
          required:
          - backup
          - etcd
          - replicas
          - selector
          type: object
        status:
          description: EtcdStatus defines the observed state of Etcd
          properties:
            conditions:
              items:
                description: Condition holds the information about the state of a
                  resource.
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another.
                    format: date-time
                    type: string
                  lastUpdateTime:
                    description: Last time the condition was updated.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of the Shoot condition.
                    type: string
                type: object
              type: array
            currentReplicas:
              format: int32
              type: integer
            endpoints:
              items:
                description: 'Endpoints is a collection of endpoints that implement
                  the actual service. Example:   Name: "mysvc",   Subsets: [     {       Addresses:
                  [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],       Ports: [{"name":
                  "a", "port": 8675}, {"name": "b", "port": 309}]     },     {       Addresses:
                  [{"ip": "10.10.3.3"}],       Ports: [{"name": "a", "port": 93},
                  {"name": "b", "port": 76}]     },  ]'
                properties:
                  apiVersion:
                    description: 'APIVersion defines the versioned schema of this
                      representation of an object. Servers should convert recognized
                      schemas to the latest internal value, and may reject unrecognized
                      values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                    type: string
                  kind:
                    description: 'Kind is a string value representing the REST resource
                      this object represents. Servers may infer this from the endpoint
                      the client submits requests to. Cannot be updated. In CamelCase.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    type: object
                  subsets:
                    description: The set of all endpoints is the union of all subsets.
                      Addresses are placed into subsets according to the IPs they
                      share. A single address with multiple ports, some of which are
                      ready and some of which are not (because they come from different
                      containers) will result in the address being displayed in different
                      subsets for the different ports. No address will appear in both
                      Addresses and NotReadyAddresses in the same subset. Sets of
                      addresses and ports that comprise a service.
                    items:
                      description: 'EndpointSubset is a group of addresses with a
                        common set of ports. The expanded set of endpoints is the
                        Cartesian product of Addresses x Ports. For example, given:   {     Addresses:
                        [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],     Ports:     [{"name":
                        "a", "port": 8675}, {"name": "b", "port": 309}]   } The resulting
                        set of endpoints can be viewed as:     a: [ 10.10.1.1:8675,
                        10.10.2.2:8675 ],     b: [ 10.10.1.1:309, 10.10.2.2:309 ]'
                      properties:
                        addresses:
                          description: IP addresses which offer the related ports
                            that are marked as ready. These endpoints should be considered
                            safe for load balancers and clients to utilize.
                          items:
                            description: EndpointAddress is a tuple that describes
                              single IP address.
                            properties:
                              hostname:
                                description: The Hostname of this endpoint
                                type: string
                              ip:
                                description: 'The IP of this endpoint. May not be
                                  loopback (127.0.0.0/8), link-local (169.254.0.0/16),
                                  or link-local multicast ((224.0.0.0/24). IPv6 is
                                  also accepted but not fully supported on all platforms.
                                  Also, certain kubernetes components, like kube-proxy,
                                  are not IPv6 ready. TODO: This should allow hostname
                                  or IP, See #4447.'
                                type: string
                              nodeName:
                                description: 'Optional: Node hosting this endpoint.
                                  This can be used to determine endpoints local to
                                  a node.'
                                type: string
                              targetRef:
                                description: Reference to object providing the endpoint.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2].
                                      For example, if the object reference is to a
                                      container within a pod, this would take on a
                                      value like: "spec.containers{name}" (where "name"
                                      refers to the name of the container that triggered
                                      the event) or if no container name is specified
                                      "spec.containers[2]" (container with index 2
                                      in this pod). This syntax is chosen only to
                                      have some well-defined way of referencing a
                                      part of an object. TODO: this design is not
                                      final and this field is subject to change in
                                      the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info:
                                      https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More
                                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                            required:
                            - ip
                            type: object
                          type: array
                        notReadyAddresses:
                          description: IP addresses which offer the related ports
                            but are not currently marked as ready because they have
                            not yet finished starting, have recently failed a readiness
                            check, or have recently failed a liveness check.
                          items:
                            description: EndpointAddress is a tuple that describes
                              single IP address.
                            properties:
                              hostname:
                                description: The Hostname of this endpoint
                                type: string
                              ip:
                                description: 'The IP of this endpoint. May not be
                                  loopback (127.0.0.0/8), link-local (169.254.0.0/16),
                                  or link-local multicast ((224.0.0.0/24). IPv6 is
                                  also accepted but not fully supported on all platforms.
                                  Also, certain kubernetes components, like kube-proxy,
                                  are not IPv6 ready. TODO: This should allow hostname
                                  or IP, See #4447.'
                                type: string
                              nodeName:
                                description: 'Optional: Node hosting this endpoint.
                                  This can be used to determine endpoints local to
                                  a node.'
                                type: string
                              targetRef:
                                description: Reference to object providing the endpoint.
                                properties:
                                  apiVersion:
                                    description: API version of the referent.
                                    type: string
                                  fieldPath:
                                    description: 'If referring to a piece of an object
                                      instead of an entire object, this string should
                                      contain a valid JSON/Go field access statement,
                                      such as desiredState.manifest.containers[2].
                                      For example, if the object reference is to a
                                      container within a pod, this would take on a
                                      value like: "spec.containers{name}" (where "name"
                                      refers to the name of the container that triggered
                                      the event) or if no container name is specified
                                      "spec.containers[2]" (container with index 2
                                      in this pod). This syntax is chosen only to
                                      have some well-defined way of referencing a
                                      part of an object. TODO: this design is not
                                      final and this field is subject to change in
                                      the future.'
                                    type: string
                                  kind:
                                    description: 'Kind of the referent. More info:
                                      https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  namespace:
                                    description: 'Namespace of the referent. More
                                      info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                                    type: string
                                  resourceVersion:
                                    description: 'Specific resourceVersion to which
                                      this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  uid:
                                    description: 'UID of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                                    type: string
                                type: object
                            required:
                            - ip
                            type: object
                          type: array
                        ports:
                          description: Port numbers available on the related IP addresses.
                          items:
                            description: EndpointPort is a tuple that describes a
                              single port.
                            properties:
                              name:
                                description: The name of this port.  This must match
                                  the 'name' field in the corresponding ServicePort.
                                  Must be a DNS_LABEL. Optional only if one port is
                                  defined.
                                type: string
                              port:
                                description: The port number of the endpoint.
                                format: int32
                                type: integer
                              protocol:
                                description: The IP protocol for this port. Must be
                                  UDP, TCP, or SCTP. Default is TCP.
                                type: string
                            required:
                            - port
                            type: object
                          type: array
                      type: object
                    type: array
                type: object
              type: array
            etcd:
              description: CrossVersionObjectReference contains enough information
                to let you identify the referred resource.
              properties:
                apiVersion:
                  description: API version of the referent
                  type: string
                kind:
                  description: Kind of the referent
                  type: string
                name:
                  description: Name of the referent
                  type: string
              type: object
            labelSelector:
              description: selector is a label query over pods that should match the
                replica count. It must match the pod template's labels.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements.
                    The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains
                      values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies
                          to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a
                          set of values. Valid operators are In, NotIn, Exists and
                          DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator
                          is In or NotIn, the values array must be non-empty. If the
                          operator is Exists or DoesNotExist, the values array must
                          be empty. This array is replaced during a strategic merge
                          patch.
                        items:
                          type: string
                        type: array
                    required:
                    - key
                    - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single
                    {key,value} in the matchLabels map is equivalent to an element
                    of matchExpressions, whose key field is "key", the operator is
                    "In", and the values array contains only "value". The requirements
                    are ANDed.
                  type: object
              type: object
            lastError:
              type: string
            ready:
              type: boolean
            readyReplicas:
              format: int32
              type: integer
            replicas:
              format: int32
              type: integer
            serviceName:
              type: string
            updatedReplicas:
              format: int32
              type: integer
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
